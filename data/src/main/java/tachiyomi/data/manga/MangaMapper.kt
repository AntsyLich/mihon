package tachiyomi.data.manga

import eu.kanade.tachiyomi.source.model.UpdateStrategy
import tachiyomi.domain.library.model.LibraryManga
import tachiyomi.domain.manga.model.Manga

object MangaMapper {
    fun mapManga(
        id: Long,
        sourceId: Long,
        sourceUrl: String,
        sourceTitle: String,
        sourceAuthor: String?,
        sourceArtist: String?,
        sourceDescription: String?,
        sourceGenre: List<String>?,
        sourceStatus: Long,
        sourceCover: String?,
        sourceUpdateStrategy: UpdateStrategy,
        chapterLastUpdate: Long?,
        chapterNextUpdate: Long?,
        userFavorite: Boolean,
        userNotes: String,
        userReaderFlags: Long,
        userChapterFlags: Long,
        coverLastModified: Long,
        calculateInterval: Long,
        dateAdded: Long,
        initialized: Boolean,
    ): Manga = Manga(
        id = id,
        source = sourceId,
        favorite = userFavorite,
        lastUpdate = chapterLastUpdate ?: 0,
        nextUpdate = chapterNextUpdate ?: 0,
        fetchInterval = calculateInterval.toInt(),
        dateAdded = dateAdded,
        viewerFlags = userReaderFlags,
        chapterFlags = userChapterFlags,
        coverLastModified = coverLastModified,
        url = sourceUrl,
        title = sourceTitle,
        artist = sourceArtist,
        author = sourceAuthor,
        description = sourceDescription,
        genre = sourceGenre,
        status = sourceStatus,
        thumbnailUrl = sourceCover,
        updateStrategy = sourceUpdateStrategy,
        initialized = initialized,
        notes = userNotes,
    )

    fun mapLibraryManga(
        id: Long,
        sourceId: Long,
        sourceUrl: String,
        sourceTitle: String,
        sourceAuthor: String?,
        sourceArtist: String?,
        sourceDescription: String?,
        sourceGenre: List<String>?,
        sourceStatus: Long,
        sourceCover: String?,
        sourceUpdateStrategy: UpdateStrategy,
        chapterLastUpdate: Long?,
        chapterNextUpdate: Long?,
        userFavorite: Boolean,
        userNotes: String,
        userReaderFlags: Long,
        userChapterFlags: Long,
        coverLastModified: Long,
        calculateInterval: Long,
        dateAdded: Long,
        initialized: Boolean,
        totalCount: Long,
        readCount: Double,
        latestUpload: Long,
        chapterFetchedAt: Long,
        lastRead: Long,
        bookmarkCount: Double,
        category: Long,
    ): LibraryManga = LibraryManga(
        manga = mapManga(
            id = id,
            sourceId = sourceId,
            sourceUrl = sourceUrl,
            sourceTitle = sourceTitle,
            sourceAuthor = sourceAuthor,
            sourceArtist = sourceArtist,
            sourceDescription = sourceDescription,
            sourceGenre = sourceGenre,
            sourceStatus = sourceStatus,
            sourceCover = sourceCover,
            sourceUpdateStrategy = sourceUpdateStrategy,
            chapterLastUpdate = chapterLastUpdate,
            chapterNextUpdate = chapterNextUpdate,
            userFavorite = userFavorite,
            userNotes = userNotes,
            userReaderFlags = userReaderFlags,
            userChapterFlags = userChapterFlags,
            coverLastModified = coverLastModified,
            calculateInterval = calculateInterval,
            dateAdded = dateAdded,
            initialized = initialized,
        ),
        category = category,
        totalChapters = totalCount,
        readCount = readCount.toLong(),
        bookmarkCount = bookmarkCount.toLong(),
        latestUpload = latestUpload,
        chapterFetchedAt = chapterFetchedAt,
        lastRead = lastRead,
    )
}
